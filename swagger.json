{
  "openapi": "3.0.0",
  "info": {
    "title": "Express TypeScript API",
    "version": "1.0.0",
    "description": "API documentation using Swagger"
  },
  "servers": [
    {
      "url": "http://localhost:5005",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "Authenticate user and retrieve JWT token",
        "tags": [
          "UserAuth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sample@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "token": {
                      "type": "string",
                      "example": "userInfo-token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request || Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized || Invalid credentials"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/recoverPassword": {
      "post": {
        "summary": "Create a token to request a password recovery.",
        "tags": [
          "Password Recovery"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sample@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recovery request successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request || Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized || Invalid credentials"
          },
          "404": {
            "description": "Email Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logs out user invalidating token",
        "tags": [
          "UserAuth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint requires a Bearer token for authentication.\nInclude the token in the Authorization header as follows:\nAuthorization: Bearer <your_token_here>\n",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized || No valid token provided"
          },
          "500": {
            "description": "Internal server error || There was a problem logging out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "There was a problem logging out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Retrieve the user's profile",
        "tags": [
          "UserProfile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint requires a Bearer token for authentication.\nInclude the token in the Authorization header as follows:\nAuthorization: Bearer <your_token_here>\n",
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile retrieved successfully"
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Carlos"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "cgarcia@sample.com"
                        },
                        "location": {
                          "type": "string",
                          "example": "Spain"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized || No token provided"
          },
          "404": {
            "description": "Not Found || Profile not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update the user's profile",
        "tags": [
          "UserProfile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint requires a Bearer token for authentication.\nInclude the token in the Authorization header as follows:\nAuthorization: Bearer <your_token_here>\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "pedrito@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Pedro"
                  },
                  "location": {
                    "type": "string",
                    "example": "Spain"
                  },
                  "preferences": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional user preferences (e.g., [\"adventure\", \"beach\"])."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "updatedProfile": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "newemail@mail.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "New Name"
                        },
                        "location": {
                          "type": "string",
                          "example": "New York, USA"
                        },
                        "preferences": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "adventure",
                            "beach"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request || Invalid data provided"
          },
          "401": {
            "description": "Unauthorized || No token provided"
          },
          "404": {
            "description": "Not Found || User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Validates user data, sends it to the main backend, and returns the response to the frontend.",
        "tags": [
          "Register"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "role"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "Full name of the user."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@sample.com",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Passw0rd@",
                    "description": "User's password (8-12 characters, at least one uppercase letter, one lowercase letter, one number, and one special character `@#!`)."
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "tourist",
                      "provider"
                    ],
                    "example": "tourist",
                    "description": "User's role."
                  },
                  "preferences": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "adventure",
                      "beach"
                    ],
                    "description": "User's personal preferences."
                  },
                  "location": {
                    "type": "string",
                    "example": "New York, USA",
                    "description": "User's location."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully."
                    },
                    "userId": {
                      "type": "string",
                      "example": "64afc392d9e3b0a9e8c92f11"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Name is required",
                        "Invalid email address",
                        "Password must be between 8 and 12 characters"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error."
                    },
                    "details": {
                      "type": "string",
                      "example": "Unexpected error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experiences/get-all": {
      "get": {
        "summary": "Retrieve experiences with optional filtering",
        "tags": [
          "Experiences"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "object"
            },
            "description": "Dynamic query parameters for filtering experiences"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved experiences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "experience123"
                      },
                      "title": {
                        "type": "string",
                        "example": "Skydiving Adventure"
                      },
                      "location": {
                        "type": "string",
                        "example": "California"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error retrieving experiences"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experiences/{id}": {
      "get": {
        "summary": "Get an experience by ID",
        "description": "Retrieve details of a specific experience by its unique ID.",
        "tags": [
          "Experiences"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the experience to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experience details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier of the experience."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the experience."
                    },
                    "description": {
                      "type": "string",
                      "description": "A detailed description of the experience."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location where the experience takes place."
                    },
                    "hostId": {
                      "type": "string",
                      "description": "The unique identifier of the host."
                    },
                    "price": {
                      "type": "number",
                      "format": "float",
                      "description": "The price of the experience."
                    },
                    "availabilityDates": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": "A list of available dates for the experience."
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags associated with the experience."
                    },
                    "rating": {
                      "type": "number",
                      "format": "float",
                      "description": "The rating of the experience."
                    },
                    "capacity": {
                      "type": "number",
                      "description": "The maximum number of participants for the experience."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date when the experience was created."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experience not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Experience not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing experience",
        "tags": [
          "Experiences"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint requires a Bearer token for authentication.\nInclude the token in the Authorization header as follows:\nAuthorization: Bearer <your_token_here>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the experience to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "location",
                  "providerId",
                  "price",
                  "availabilityDates",
                  "tags",
                  "rating",
                  "capacity"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Horse Riding",
                    "description": "Name of the experience."
                  },
                  "description": {
                    "type": "string",
                    "example": "One hour of horse riding with an instructor.",
                    "description": "Detailed description of the experience."
                  },
                  "location": {
                    "type": "string",
                    "example": "Oviedo, Spain",
                    "description": "Location where the experience takes place."
                  },
                  "providerId": {
                    "type": "string",
                    "example": "aoiwufioaujf1983u4aj891u9",
                    "description": "ID of the user uploading the experience."
                  },
                  "price": {
                    "type": "string",
                    "example": "65$",
                    "description": "Price of the experience."
                  },
                  "availabilityDates": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date"
                    },
                    "example": [
                      "2023-12-01",
                      "2023-12-15"
                    ],
                    "description": "Available dates to book the experience."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags associated with the experience."
                  },
                  "rating": {
                    "type": "number",
                    "format": "float",
                    "description": "Rating of the experience (0-5)."
                  },
                  "capacity": {
                    "type": "number",
                    "description": "Maximum number of participants for the experience."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experience updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Experience updated successfully"
                    },
                    "updatedExperience": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier of the experience."
                        },
                        "title": {
                          "type": "string",
                          "description": "Title of the experience."
                        },
                        "description": {
                          "type": "string",
                          "description": "Detailed description of the experience."
                        },
                        "location": {
                          "type": "string",
                          "description": "Location where the experience takes place."
                        },
                        "providerId": {
                          "type": "string",
                          "description": "ID of the user uploading the experience."
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "Price of the experience."
                        },
                        "availabilityDates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": "List of available dates for the experience."
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Tags associated with the experience."
                        },
                        "rating": {
                          "type": "number",
                          "format": "float",
                          "description": "Rating of the experience."
                        },
                        "capacity": {
                          "type": "number",
                          "description": "Maximum number of participants for the experience."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request || Invalid data provided (e.g., missing required fields).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Title is required",
                        "Price must be a valid number"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized || User not authorized to update experience (e.g., missing or invalid token).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experience not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Experience not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error || An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "details": {
                      "type": "string",
                      "example": "Unexpected error occurred while processing the request."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experiences": {
      "post": {
        "summary": "Register a new experience",
        "tags": [
          "Experiences"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This endpoint requires a Bearer token for authentication.\nInclude the token in the Authorization header as follows:\nAuthorization: Bearer <your_token_here>\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "location",
                  "providerId",
                  "price",
                  "availabilityDates",
                  "tags",
                  "rating",
                  "capacity"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Horse Riding",
                    "description": "Name of the experience."
                  },
                  "description": {
                    "type": "string",
                    "example": "One hour of horse riding with an instructor.",
                    "description": "Detailed description of the experience."
                  },
                  "location": {
                    "type": "string",
                    "example": "Oviedo, Spain",
                    "description": "Location where the experience takes place."
                  },
                  "providerId": {
                    "type": "string",
                    "example": "aoiwufioaujf1983u4aj891u9",
                    "description": "ID of the user uploading the experience."
                  },
                  "price": {
                    "type": "string",
                    "example": "65$",
                    "description": "Price of the experience."
                  },
                  "availabilityDates": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date"
                    },
                    "example": [
                      "2023-12-01",
                      "2023-12-15"
                    ],
                    "description": "Available dates to book the experience."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags associated with the experience."
                  },
                  "rating": {
                    "type": "number",
                    "format": "float",
                    "description": "Rating of the experience (0-5)."
                  },
                  "capacity": {
                    "type": "number",
                    "description": "Maximum number of participants for the experience."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the experience was created."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experience registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique identifier of the experience."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the experience."
                    },
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the experience."
                    },
                    "location": {
                      "type": "string",
                      "description": "Location where the experience takes place."
                    },
                    "hostId": {
                      "type": "string",
                      "description": "Unique identifier of the host."
                    },
                    "price": {
                      "type": "number",
                      "format": "float",
                      "description": "Price of the experience."
                    },
                    "availabilityDates": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": "List of available dates for the experience."
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags associated with the experience."
                    },
                    "rating": {
                      "type": "number",
                      "format": "float",
                      "description": "Rating of the experience."
                    },
                    "capacity": {
                      "type": "number",
                      "description": "Maximum number of participants for the experience."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date when the experience was created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request || Invalid data provided (e.g., missing required fields).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Title is required",
                        "Price must be a valid number"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized || User not authorized to create experience (e.g., missing or invalid token).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error || An unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "details": {
                      "type": "string",
                      "example": "Unexpected error occurred while processing the request."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}